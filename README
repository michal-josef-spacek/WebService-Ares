NAME
    WebService::Ares - Perl class to communication with Ares service.

SYNOPSIS
     use WebService::Ares;
     my $obj = WebService::Ares->new(%parameters);
     my @commands = $obj->commands;
     my $error = $obj->error($clean);
     my $data_hr = $obj->get($command, $def_hr);
     my $xml_data = $obj->get_xml($command, $def_hr);

DESCRIPTION
     ARES - "Administrativní registr ekonomických subjektů" is Czech information system of Ministry of Finance

METHODS
    "new(%parameters)"
             Constructor.

            *       "agent"

                     User agent setting.
                     Default is 'WebService::Ares/$VERSION'.

            *       "debug"

                     Debug mode flag.
                     Default is 0.

    "commands()"
             Get web service commands.
             Returns array of commands.

    "error($clean)"
             Get error.
             When $clean variable is present, cleans internal error variable.
             Returns string with error or undef.

    "get($command, $def_hr)"
             Get data for command '$command' and definitition defined in $dev_hr reference of hash.
             Returns reference to hash with data or undef as error.

    "get_xml($command, $def_hr)"
             Get XML data for command '$command' and definition defined in $dev_hr reference to hash.
             Returns string with XML data or undef as error.

ERRORS
     get():
             Method '%s' is unimplemented.

     get_xml():
             Method '%s' is unimplemented.

EXAMPLE1
     # Pragmas.
     use strict;
     use warnings;

     # Modules.
     use WebService::Ares;

     # Object.
     my $obj = WebService::Ares->new;

     # Get data.
     # TODO

     # Print data.
     # TODO

     # Output:
     # TODO

EXAMPLE2
     # Pragmas.
     use strict;
     use warnings;

     # Modules.
     use Data::Printer;
     use WebService::Ares;

     # Arguments.
     if (@ARGV < 1) {
             print STDERR "Usage: $0 ic\n";
             exit 1;
     }
     my $ic = $ARGV[0];

     # Object.
     my $obj = WebService::Ares->new;

     # Get data.
     my $data_hr = $obj->get('standard', {'ic' => $ic});

     # Print data.
     p $data_hr;

     # Output:
     # TODO

EXAMPLE3
     # Pragmas.
     use strict;
     use warnings;

     # Modules.
     use WebService::Ares;

     # Object.
     my $obj = WebService::Ares->new;

     # Get commands.
     my @commands = $obj->commands;

     # Print commands.
     print join "\n", @commands;
     print "\n";

     # Output:
     # standard

DEPENDENCIES
    Ares::Standard, Class::Utils, Error::Pure, HTTP::Request,
    LWP::UserAgent.

SEE ALSO
    Ares::Standard.

REPOSITORY
    <https://github.com/tupinek/WebService-Ares>

AUTHOR
    Michal Špaček skim@cpan.org

LICENSE AND COPYRIGHT
    BSD license.

VERSION
    0.01

